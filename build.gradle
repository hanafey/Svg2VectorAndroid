version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    google()
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'com.android.tools:sdk-common:26.2.1'
    implementation 'com.android.tools:common:26.2.1'
}

//create a single Jar with all dependencie
task uberJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Svg2VectorAndroid',
                'Implementation-Version': version,
                'Main-Class': 'com.vector.svg2vectorandroid.Runner'
    }
    appendix = 'uber'

    // By trial and error uneeded jars on run path are determined. If path contains any of these, it is excluded.
    def jar_excludes = [
            'kotlin',
            'layoutlib/layoutlib-api',
            'tools/repository',
            '/builder-test-api',
            'org.bouncycastle/',
            'org.glassfish.jaxb/',
            'com.google.code.findbugs/',
            'com.google.errorprone/',
            'org.jetbrains/',
            'org.jvnet.staxex/',
            'org.apache.httpcomponents/',
            'com.android.tools.ddms/',
            'com.android.tools/dvlib',
            'com.android.tools.build/builder-model',
            // NEEDED: 'com.google.guava/',
            'com.google.protobuf/']

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'

    from sourceSets.main.output

    from configurations.runtimeClasspath.findAll {
        it.name.endsWith('jar') && !jar_excludes.find { s -> it.path.contains(s) }
    }.collect {
        zipTree(it)
    }
}


